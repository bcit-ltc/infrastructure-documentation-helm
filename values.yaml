# Special app-specific values
# api:
#   name: "api"
#   url: "https://app.ltc.bcit.ca/api"

# Common default values reflect the "stable" (production) environment.
name: "infrastructure-documentation"
# Sets the repo and tag of the deployment.
image:
  repository: "ghcr.io/bcit-ltc/infrastructure-documentation"
  tag: "1.0.8"
  pullPolicy: IfNotPresent
# This is for the secrets for pulling an image from a private repository.
# See: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# - name: myregistry-secret

# The organization domain.
defaultDomain: "ltc.bcit.ca"
# Number of pods to run for the deployment.
replicaCount: 1
# Target port used by the app in the container. Used to configure Deployment and Service resources.
container:
  port: 8080
# Port connecting ingress to the service.
service:
  type: ClusterIP
  port: 80
# Number of seconds the Deployment controller waits before indicating that progress has stalled.
progressDeadlineSeconds: 300
# Number of old Deployment revisions to retain.
revisionHistoryLimit: 2
resources:
  # For more information on configuring resources, see the K8s documentation:
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  cpuRequest: "100m"
  cpuLimit: "100m"
  memRequest: "64Mi"
  memLimit: "128Mi"
serviceAccount:
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  annotations: {}
  # If not set and create is true, a name is generated using the app.name template
  name: ""
# podAnnotations:
#   prometheus.io/scrape: "true"

# extraEnv:
#   - name: FOO
#     value: bar

# readinessProbe:
#   httpGet:
#     path: /
#     port: 8080
#   initialDelaySeconds: 5
#   periodSeconds: 10

# livenessProbe:
#   httpGet:
#     path: /
#     port: 8080
#   initialDelaySeconds: 15
#   periodSeconds: 20
ingress:
  annotations: {}
  # |
  # kubernetes.io/tls-acme: "true"
  host: "" # Optional, defaults to app.name
  tlsSecret: "" # Defaults to app.name-star-ltc-bcit-ca; prefixed with app.name.
  # extraPaths:     # Optional
  #   - path: /api
  #     backend:
  #       service:
  #         name: api-service
  #         port:
  #           number: 3000
# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp
    emptyDir: {}
  - name: nginx-config
    configMap:
      name: nginx-config
# - name: mysecret
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: nginx-config
    mountPath: /etc/nginx/conf.d
# - name: mypath
#   mountPath: "/app/mypath"
#   readOnly: true

securityContext: {}
# readOnlyRootFilesystem: true
# allowPrivilegeEscalation: false
# capabilities:
#   drop:
#     - NET_RAW
podSecurityContext: {}
# runAsNonRoot: true
# runAsGroup: {{ .Values.injector.gid | default 1000 }}
# runAsUser: {{ .Values.injector.uid | default 100 }}
# fsGroup: {{ .Values.injector.gid | default 1000 }}
#####
##### For later development #####
#####
# # This configures a Statefulset to create a PVC for data
# dataStorage:
#   enabled: false
#   size: 10Gi
#   # Location where the PVC will be mounted.
#   mountPath: "/app/data"
